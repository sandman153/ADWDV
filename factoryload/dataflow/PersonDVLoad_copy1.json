{
	"name": "PersonDVLoad_copy1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "GeneralSink",
						"type": "DatasetReference"
					},
					"name": "DVSource"
				},
				{
					"dataset": {
						"referenceName": "HUBPerson",
						"type": "DatasetReference"
					},
					"name": "HUBPerson"
				},
				{
					"dataset": {
						"referenceName": "PersonSAT",
						"type": "DatasetReference"
					},
					"name": "SATPerson"
				},
				{
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "PersonSAT",
						"type": "DatasetReference"
					},
					"name": "SinkSatPerson"
				},
				{
					"dataset": {
						"referenceName": "PersonSAT",
						"type": "DatasetReference"
					},
					"name": "SinkHubPerson"
				}
			],
			"transformations": [
				{
					"name": "hashColumns"
				},
				{
					"name": "CheckNewSatPerson"
				},
				{
					"name": "NewSATRecords"
				},
				{
					"name": "NewSatPerson"
				},
				{
					"name": "CheckNewPerson"
				},
				{
					"name": "NewHubPerson"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> DVSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HUBPerson\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SATPerson\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> source1\nDVSource derive(businesskey = toString(byPosition(2)),\n\t\t{} = ERROR_FUNCTION('')) ~> hashColumns\nhashColumns, SATPerson exists(VID == SATPerson@PersonVID,\n\tnegate:true,\n\tbroadcast: 'none')~> CheckNewSatPerson\nCheckNewSatPerson alterRow(insertIf(true())) ~> NewSATRecords\nNewSATRecords select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NewSatPerson\nhashColumns, HUBPerson exists({} == PersonVID,\n\tnegate:true,\n\tbroadcast: 'none')~> CheckNewPerson\nCheckNewPerson select(mapColumn(\n\t\tVID,\n\t\tLoad_TS\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NewHubPerson\nHUBPerson derive({} = ERROR_FUNCTION('instr(name, __SINGLE_QUOTE__ID__SINGLE_QUOTE__) > 0)')) ~> DerivedColumn1\nNewSatPerson sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPersonVID = VID,\n\t\tLoadDateTime = Load_TS\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkSatPerson\nNewHubPerson sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPersonVID = VID,\n\t\tLoadDateTime = Load_TS\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkHubPerson"
		}
	}
}