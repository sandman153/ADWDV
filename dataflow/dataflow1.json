{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DVSource",
						"type": "DatasetReference"
					},
					"name": "DataVaultSource"
				},
				{
					"dataset": {
						"referenceName": "DVSAT",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DVSAT",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "Exists1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "Select1"
				}
			],
			"script": "parameters{\n\thashVal as string ('BusinessEntityID'),\n\tTargetID as string ('PersonVID'),\n\thash as string ('hash_Person')\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DataVaultSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nDataVaultSource derive(HKey = toString(byName($hashVal) )) ~> DerivedColumn1\nsource1 derive(HKey = byName($TargetID)) ~> DerivedColumn2\nDerivedColumn1, DerivedColumn2 exists(DerivedColumn1@HKey == DerivedColumn2@HKey,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists1\nExists1 alterRow(insertIf(true())) ~> AlterRow1\nAlterRow1 select(mapColumn(\n\t\tHKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}