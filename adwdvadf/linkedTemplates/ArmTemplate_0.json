{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adwdvadf"
		},
		"ADWStage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ADWStage'"
		},
		"Adventure Works Data Vault_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Adventure Works Data Vault'"
		},
		"AzureDataVaultSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureDataVaultSource'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADWStage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Staging Adventure Works in preparation for DV load. Takes place of raw vault",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ADWStage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataVaultDemo')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConfigSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADWStage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Table_Structure_config",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Table_Structure_config.xlsx",
						"container": "dvconfig"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "schema_name",
						"type": "String"
					},
					{
						"name": "table_name",
						"type": "String"
					},
					{
						"name": "pk_name",
						"type": "String"
					},
					{
						"name": "SourceID",
						"type": "String"
					},
					{
						"name": "TargetID",
						"type": "String"
					},
					{
						"name": "HashColDiff",
						"type": "String"
					},
					{
						"name": "HubName",
						"type": "String"
					},
					{
						"name": "SATName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADWStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StageSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADWStage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sourceName": {
						"type": "string",
						"defaultValue": "personPersonView.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().sourceName,'.csv')",
							"type": "Expression"
						},
						"container": "adwstage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADWStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Adventure Works Data Vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AdventureWorks Data Vault Demo",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Adventure Works Data Vault_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AzureDataVaultDemo",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureDataVaultDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataVaultSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Data Vault Demo Source - Adventure Works",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureDataVaultSource_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AzureDataVaultDemo",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureDataVaultDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADWSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataVaultSource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaName": {
						"type": "string",
						"defaultValue": "schema"
					},
					"sourceName": {
						"type": "string",
						"defaultValue": "sourceTable"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().sourceName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataVaultSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DVConfig')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Adventure Works Data Vault",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SCHEMAName",
						"type": "varchar"
					},
					{
						"name": "TableName",
						"type": "nvarchar"
					},
					{
						"name": "pk_name",
						"type": "nvarchar"
					},
					{
						"name": "SourceID",
						"type": "nvarchar"
					},
					{
						"name": "TargetID",
						"type": "nvarchar"
					},
					{
						"name": "HashColDiff",
						"type": "nvarchar"
					},
					{
						"name": "HubTable",
						"type": "varchar"
					},
					{
						"name": "SatName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "config",
					"table": "Process"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Adventure Works Data Vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DVHUB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataVaultSource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaName": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"HubName": {
						"type": "string",
						"defaultValue": "HubName"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().HubName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataVaultSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DVSAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Adventure Works Data Vault",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"satname": {
						"type": "string",
						"defaultValue": "sat"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().satname",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Adventure Works Data Vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedLoadMeta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Adventure Works Data Vault",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "table_type",
						"type": "nvarchar"
					},
					{
						"name": "source_table",
						"type": "nvarchar"
					},
					{
						"name": "link_name",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "config",
					"table": "linkload"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Adventure Works Data Vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataVaultLoad')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StageSource",
								"type": "DatasetReference"
							},
							"name": "DataVaultSource"
						},
						{
							"dataset": {
								"referenceName": "DVHUB",
								"type": "DatasetReference"
							},
							"name": "HUBSource"
						},
						{
							"dataset": {
								"referenceName": "DVSAT",
								"type": "DatasetReference"
							},
							"name": "SATSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DVHUB",
								"type": "DatasetReference"
							},
							"name": "HubLoad"
						},
						{
							"dataset": {
								"referenceName": "DVSAT",
								"type": "DatasetReference"
							},
							"name": "SATLoad"
						}
					],
					"transformations": [
						{
							"name": "hashKeys"
						},
						{
							"name": "NewRows"
						},
						{
							"name": "TargetHubKey"
						},
						{
							"name": "NewHubRecords"
						},
						{
							"name": "SatRowsExist"
						},
						{
							"name": "InsertHubRows"
						},
						{
							"name": "NewSATRecords"
						},
						{
							"name": "Select1"
						},
						{
							"name": "TargetSatKeys"
						}
					],
					"script": "parameters{\n\thashVal as string,\n\tTargetID as string,\n\thashDiff as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> DataVaultSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HUBSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SATSource\nDataVaultSource derive(HKey = toString(sha2(256, byName($hashVal))),\n\t\tLoadDateTime = currentDate()) ~> hashKeys\nhashKeys, TargetHubKey exists(hashKeys@HKey == TargetHubKey@HKey,\n\tnegate:true,\n\tbroadcast: 'auto')~> NewRows\nHUBSource derive(HKey = toString(byName($TargetID))) ~> TargetHubKey\nInsertHubRows select(mapColumn(\n\t\teach(match(name==$hashVal)),\n\t\teach(match(name=='HKey'),\n\t\t\treplace($$,'HKey',$TargetID) = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NewHubRecords\nhashKeys, TargetSatKeys exists(hashKeys@HKey == TargetSatKeys@HKey\n\t&& hashKeys@LoadDateTime == TargetSatKeys@LoadDateTime,\n\tnegate:true,\n\tbroadcast: 'auto')~> SatRowsExist\nNewRows alterRow(insertIf(true())) ~> InsertHubRows\nSatRowsExist alterRow(insertIf(true())) ~> NewSATRecords\nNewSATRecords select(mapColumn(\n\t\teach(match(name=='HKey'),\n\t\t\treplace($$,'HKey',$TargetID) = $$),\n\t\teach(match(name=='hashDiffValue'),\n\t\t\treplace($$,'hashDiffValue',$hashDiff) = $$),\n\t\teach(match(name!=$hashVal))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSATSource derive(HKey = byName($TargetID),\n\t\tLoadDateTime = toTimestamp(byName('LoadDateTime')),\n\t\thashID = byName($hashDiff)) ~> TargetSatKeys\nNewHubRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> HubLoad\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SATLoad"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StageSource')]",
				"[concat(variables('factoryId'), '/datasets/DVHUB')]",
				"[concat(variables('factoryId'), '/datasets/DVSAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Generic Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadDV",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Config').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy Source Data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SetSource",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().SchemaName}.@{item().TableName}"
										},
										{
											"name": "Destination",
											"value": "adwstage//@{'<sourcetable>'}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ADWSource",
											"type": "DatasetReference",
											"parameters": {
												"schemaName": {
													"value": "@item().SCHEMAName",
													"type": "Expression"
												},
												"sourceName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "StageSource",
											"type": "DatasetReference",
											"parameters": {
												"sourceName": {
													"value": "@concat(variables('st'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SetSource",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [
										{
											"name": "debug_TargetID",
											"value": "@item().TargetID"
										}
									],
									"typeProperties": {
										"variableName": "st",
										"value": {
											"value": "@concat(item().SchemaName, item().TableName)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Data Vault Load",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy Source Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Test_TargetID",
											"value": "@item().TargetID"
										}
									],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DataVaultLoad",
											"type": "DataFlowReference",
											"parameters": {
												"hashVal": {
													"value": "@item().SourceID",
													"type": "Expression"
												},
												"TargetID": {
													"value": "@item().TargetID",
													"type": "Expression"
												},
												"hashDiff": {
													"value": "@item().HashColDiff",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"DataVaultSource": {
													"sourceName": {
														"value": "@variables('st')",
														"type": "Expression"
													}
												},
												"HUBSource": {
													"schemaName": "dbo",
													"HubName": {
														"value": "@item().HubTable",
														"type": "Expression"
													}
												},
												"SATSource": {
													"schema": "dbo",
													"satname": {
														"value": "@item().SatName",
														"type": "Expression"
													}
												},
												"HubLoad": {
													"schemaName": "dbo",
													"HubName": {
														"value": "@item().HubTable",
														"type": "Expression"
													}
												},
												"SATLoad": {
													"schema": "dbo",
													"satname": {
														"value": "@item().SatName",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"integrationRuntime": {
											"referenceName": "AzureDataVaultDemo",
											"type": "IntegrationRuntimeReference"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup Config",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy Config Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadUncommitted"
							},
							"dataset": {
								"referenceName": "DVConfig",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Load Config File",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-30.australiaeast.logic.azure.com:443/workflows/c5d5f0ef5dc141ca8cea66e35c55782a/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=e6YAQr5h-jsvqUI0f8Wfg5YnykZ3s0pB3AeEBk0O_n8",
							"connectVia": {
								"referenceName": "AzureDataVaultDemo",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Copy Config Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Config File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table config.process",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "schema_name",
											"type": "String"
										},
										"sink": {
											"name": "SCHEMAName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "table_name",
											"type": "String"
										},
										"sink": {
											"name": "TableName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pk_name",
											"type": "String"
										},
										"sink": {
											"name": "pk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SourceID",
											"type": "String"
										},
										"sink": {
											"name": "SourceID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TargetID",
											"type": "String"
										},
										"sink": {
											"name": "TargetID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HashColDiff",
											"type": "String"
										},
										"sink": {
											"name": "HashColDiff",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HubName",
											"type": "String"
										},
										"sink": {
											"name": "HubTable",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SATName",
											"type": "String"
										},
										"sink": {
											"name": "SatName",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ConfigSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DVConfig",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"st": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DVConfig')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureDataVaultDemo')]",
				"[concat(variables('factoryId'), '/datasets/ConfigSource')]",
				"[concat(variables('factoryId'), '/datasets/ADWSource')]",
				"[concat(variables('factoryId'), '/datasets/StageSource')]",
				"[concat(variables('factoryId'), '/dataflows/DataVaultLoad')]"
			]
		}
	]
}