{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adwdvadf"
		},
		"ADWStage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ADWStage'"
		},
		"Adventure Works Data Vault_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Adventure Works Data Vault'"
		},
		"AzureDataVaultSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureDataVaultSource'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy Person')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Person Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BusinessEntityID",
											"type": "Int32"
										},
										"sink": {
											"name": "BusinessEntityID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "PersonType",
											"type": "String"
										},
										"sink": {
											"name": "PersonType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NameStyle",
											"type": "Boolean"
										},
										"sink": {
											"name": "NameStyle",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String"
										},
										"sink": {
											"name": "Title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String"
										},
										"sink": {
											"name": "MiddleName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Suffix",
											"type": "String"
										},
										"sink": {
											"name": "Suffix",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmailPromotion",
											"type": "Int32"
										},
										"sink": {
											"name": "EmailPromotion",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "AdditionalContactInfo",
											"type": "String"
										},
										"sink": {
											"name": "AdditionalContactInfo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Demographics",
											"type": "String"
										},
										"sink": {
											"name": "Demographics",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid"
										},
										"sink": {
											"name": "rowguid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "PersonSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PersonStage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "PersonDVLoad",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Person Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PersonDVLoad",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PersonSource": {},
									"HUBPerson": {},
									"SATPerson": {},
									"SinkSatPerson": {},
									"SinkHubPerson": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PersonSource')]",
				"[concat(variables('factoryId'), '/datasets/PersonStage')]",
				"[concat(variables('factoryId'), '/dataflows/PersonDVLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HUBPerson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Adventure Works Data Vault",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonVID",
						"type": "nvarchar"
					},
					{
						"name": "BusinessEntityID",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PersonHUB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Adventure Works Data Vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PersonSAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Adventure Works Data Vault",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonVID",
						"type": "nvarchar"
					},
					{
						"name": "LoadDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "EmailPromotion",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "PersonTypeCode",
						"type": "char"
					},
					{
						"name": "AdditionalContactInfo",
						"type": "varchar"
					},
					{
						"name": "Demographics",
						"type": "varchar"
					},
					{
						"name": "MiddleName",
						"type": "varchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "Suffix",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PersonSAT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Adventure Works Data Vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PersonSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataVaultSource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PersonType",
						"type": "nchar"
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "EmailPromotion",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdditionalContactInfo",
						"type": "xml"
					},
					{
						"name": "Demographics",
						"type": "xml"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Person",
					"table": "Person"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataVaultSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PersonStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADWStage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Person.csv",
						"container": "adwstage"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "String"
					},
					{
						"name": "PersonType",
						"type": "String"
					},
					{
						"name": "NameStyle",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "EmailPromotion",
						"type": "String"
					},
					{
						"name": "AdditionalContactInfo",
						"type": "String"
					},
					{
						"name": "Demographics",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADWStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADWStage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Staging Adventure Works in preparation for DV load. Takes place of raw vault",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ADWStage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Adventure Works Data Vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AdventureWorks Data Vault Demo",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Adventure Works Data Vault_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AzureDataVaultDemo",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureDataVaultDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataVaultSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Data Vault Demo Source - Adventure Works",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureDataVaultSource_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AzureDataVaultDemo",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureDataVaultDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataVaultDemo')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PersonDVLoad')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PersonStage",
								"type": "DatasetReference"
							},
							"name": "PersonSource",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "HUBPerson",
								"type": "DatasetReference"
							},
							"name": "HUBPerson",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "PersonSAT",
								"type": "DatasetReference"
							},
							"name": "SATPerson",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PersonSAT",
								"type": "DatasetReference"
							},
							"name": "SinkSatPerson"
						},
						{
							"dataset": {
								"referenceName": "HUBPerson",
								"type": "DatasetReference"
							},
							"name": "SinkHubPerson"
						}
					],
					"transformations": [
						{
							"name": "hashColumns"
						},
						{
							"name": "CheckNewSatPerson"
						},
						{
							"name": "NewHubRecords"
						},
						{
							"name": "NewSatPerson"
						},
						{
							"name": "CheckNewPerson"
						},
						{
							"name": "NewHubPerson"
						}
					],
					"script": "source(output(\n\t\tBusinessEntityID as short,\n\t\tPersonType as string,\n\t\tNameStyle as boolean,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tEmailPromotion as short,\n\t\tAdditionalContactInfo as string,\n\t\tDemographics as string,\n\t\trowguid as string,\n\t\tModifiedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> PersonSource\nsource(output(\n\t\tPersonVID as string,\n\t\tBusinessEntityID as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HUBPerson\nsource(output(\n\t\tPersonVID as string,\n\t\tLoadDateTime as timestamp,\n\t\tNameStyle as boolean,\n\t\tEmailPromotion as integer,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tPersonTypeCode as string,\n\t\tAdditionalContactInfo as string,\n\t\tDemographics as string,\n\t\tMiddleName as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\tSuffix as string,\n\t\tTitle as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SATPerson\nPersonSource derive(PersonVID = sha1(toString(BusinessEntityID) ),\n\t\tLoad_TS = currentTimestamp()) ~> hashColumns\nhashColumns, SATPerson exists(hashColumns@PersonVID == SATPerson@PersonVID,\n\tnegate:true,\n\tbroadcast: 'none')~> CheckNewSatPerson\nCheckNewSatPerson alterRow(insertIf(true())) ~> NewHubRecords\nNewHubRecords select(mapColumn(\n\t\tBusinessEntityID,\n\t\tPersonType,\n\t\tNameStyle,\n\t\tTitle,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tLastName,\n\t\tSuffix,\n\t\tEmailPromotion,\n\t\tAdditionalContactInfo,\n\t\tDemographics,\n\t\trowguid,\n\t\tModifiedDate,\n\t\tPersonVID,\n\t\tLoadDateTime = Load_TS\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NewSatPerson\nhashColumns, HUBPerson exists(hashColumns@PersonVID == HUBPerson@PersonVID,\n\tnegate:true,\n\tbroadcast: 'none')~> CheckNewPerson\nCheckNewPerson select(mapColumn(\n\t\tBusinessEntityID,\n\t\tPersonVID,\n\t\tLoadDateTime = Load_TS\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NewHubPerson\nNewSatPerson sink(input(\n\t\tPersonVID as string,\n\t\tLoadDateTime as timestamp,\n\t\tNameStyle as boolean,\n\t\tEmailPromotion as integer,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tPersonTypeCode as string,\n\t\tAdditionalContactInfo as string,\n\t\tDemographics as string,\n\t\tMiddleName as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\tSuffix as string,\n\t\tTitle as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPersonVID,\n\t\tLoadDateTime,\n\t\tNameStyle,\n\t\tEmailPromotion,\n\t\tFirstName,\n\t\tLastName,\n\t\tPersonTypeCode = PersonType,\n\t\tAdditionalContactInfo,\n\t\tDemographics,\n\t\tMiddleName,\n\t\tPasswordHash = PersonVID,\n\t\tPasswordSalt = PersonVID,\n\t\tSuffix,\n\t\tTitle\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkSatPerson\nNewHubPerson sink(input(\n\t\tPersonVID as string,\n\t\tBusinessEntityID as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tPersonVID,\n\t\tBusinessEntityID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkHubPerson"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PersonStage')]",
				"[concat(variables('factoryId'), '/datasets/HUBPerson')]",
				"[concat(variables('factoryId'), '/datasets/PersonSAT')]"
			]
		}
	]
}