{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adwdvadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Generic Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadDV",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Config').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Source Data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SetSource",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().SchemaName}.@{item().TableName}"
										},
										{
											"name": "Destination",
											"value": "adwstage//@{'<sourcetable>'}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DVSource",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"table": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "StageSource",
											"type": "DatasetReference",
											"parameters": {
												"sourcetable": {
													"value": "@variables('st')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SetSource",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "st",
										"value": {
											"value": "@concat(item().SchemaName, item().TableName)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Data Vault Load",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Copy Source Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "DataVaultLoad",
											"type": "DataFlowReference",
											"parameters": {
												"hashVal": {
													"value": "'@{item().SourceID}'",
													"type": "Expression"
												},
												"TargetID": {
													"value": "'@{item().TargetID}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"DataVaultSource": {
													"sourcetable": {
														"value": "@variables('st')",
														"type": "Expression"
													}
												},
												"HUBSource": {
													"schemaName": "dbo",
													"hubName": {
														"value": "@item().HubTable",
														"type": "Expression"
													}
												},
												"SATSource": {
													"schema": "dbo",
													"satname": {
														"value": "@item().SatName",
														"type": "Expression"
													}
												},
												"HubLoad": {
													"schemaName": "dbo",
													"hubName": {
														"value": "@item().HubTable",
														"type": "Expression"
													}
												},
												"SATLoad": {
													"schema": "dbo",
													"satname": {
														"value": "@item().SatName",
														"type": "Expression"
													}
												}
											}
										},
										"integrationRuntime": {
											"referenceName": "AzureDataVaultDemo",
											"type": "IntegrationRuntimeReference"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup Config",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy Config Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadUncommitted"
							},
							"dataset": {
								"referenceName": "DVConfig",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Load Config File",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-30.australiaeast.logic.azure.com:443/workflows/c5d5f0ef5dc141ca8cea66e35c55782a/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=e6YAQr5h-jsvqUI0f8Wfg5YnykZ3s0pB3AeEBk0O_n8",
							"connectVia": {
								"referenceName": "AzureDataVaultDemo",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET"
						}
					},
					{
						"name": "Copy Config Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Config File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table config.process",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SchemaName",
											"type": "String"
										},
										"sink": {
											"name": "SCHEMAName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TableName",
											"type": "String"
										},
										"sink": {
											"name": "TableName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "pk_name",
											"type": "String"
										},
										"sink": {
											"name": "pk_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SourceID",
											"type": "String"
										},
										"sink": {
											"name": "SourceID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TargetID",
											"type": "String"
										},
										"sink": {
											"name": "TargetID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HashColDiff",
											"type": "String"
										},
										"sink": {
											"name": "HashColDiff",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HubTable",
											"type": "String"
										},
										"sink": {
											"name": "HubTable",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SatName",
											"type": "String"
										},
										"sink": {
											"name": "SatName",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADWConfigSource",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DVConfig",
								"type": "DatasetReference"
							}
						]
					}
				],
				"variables": {
					"st": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DVConfig')]",
				"[concat(variables('factoryId'), '/datasets/ADWConfigSource')]",
				"[concat(variables('factoryId'), '/datasets/DVSource')]",
				"[concat(variables('factoryId'), '/datasets/StageSource')]",
				"[concat(variables('factoryId'), '/dataflows/DataVaultLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADWConfigSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADWStage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "config.csv",
						"container": "dvconfig"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SchemaName,TableName,pk_name,SourceID,TargetID,HashColDiff,HubTable,SatName",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DVConfig')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Adventure Works Data Vault",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SCHEMAName",
						"type": "varchar"
					},
					{
						"name": "TableName",
						"type": "nvarchar"
					},
					{
						"name": "pk_name",
						"type": "nvarchar"
					},
					{
						"name": "SourceID",
						"type": "nvarchar"
					},
					{
						"name": "TargetID",
						"type": "nvarchar"
					},
					{
						"name": "HashColDiff",
						"type": "nvarchar"
					},
					{
						"name": "HubTable",
						"type": "varchar"
					},
					{
						"name": "SatName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "config",
					"table": "Process"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DVHUB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Adventure Works Data Vault",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaName": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"hubName": {
						"type": "string",
						"defaultValue": "hubName"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().hubName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DVSAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Adventure Works Data Vault",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"satname": {
						"type": "string",
						"defaultValue": "sat"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().satname",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DVSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataVaultSource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "schema"
					},
					"table": {
						"type": "string",
						"defaultValue": "table"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StageSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADWStage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sourcetable": {
						"type": "string",
						"defaultValue": "source"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().sourcetable",
							"type": "Expression"
						},
						"container": "adwstage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataVaultLoad')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StageSource",
								"type": "DatasetReference"
							},
							"name": "DataVaultSource"
						},
						{
							"dataset": {
								"referenceName": "DVHUB",
								"type": "DatasetReference"
							},
							"name": "HUBSource"
						},
						{
							"dataset": {
								"referenceName": "DVSAT",
								"type": "DatasetReference"
							},
							"name": "SATSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DVHUB",
								"type": "DatasetReference"
							},
							"name": "HubLoad"
						},
						{
							"dataset": {
								"referenceName": "DVSAT",
								"type": "DatasetReference"
							},
							"name": "SATLoad"
						}
					],
					"transformations": [
						{
							"name": "hashKeys"
						},
						{
							"name": "NewRows"
						},
						{
							"name": "TargetHubKey"
						},
						{
							"name": "NewHubRecords"
						},
						{
							"name": "Select2"
						},
						{
							"name": "TargetSATKey"
						},
						{
							"name": "SatRowsExist"
						},
						{
							"name": "InsertSatRows"
						},
						{
							"name": "NewSATRecords"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "parameters{\n\thashVal as string,\n\tTargetID as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> DataVaultSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HUBSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SATSource\nDataVaultSource derive(HKey = toString(sha2(256, byName($hashVal)))) ~> hashKeys\nhashKeys, TargetSATKey exists(HKey == hashID,\n\tnegate:true,\n\tbroadcast: 'auto')~> NewRows\nHUBSource derive(hashID = toString(byName($TargetID))) ~> TargetHubKey\nInsertSatRows select(mapColumn(\n\t\tHKey,\n\t\teach(match(name==$hashVal))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NewHubRecords\nDerivedColumn1 select(mapColumn(\n\t\tHKey,\n\t\teach(match(name!=$hashVal))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSATSource derive(hashID = toString(byName($TargetID))) ~> TargetSATKey\nSelect2, TargetHubKey exists(HKey == hashID,\n\tnegate:true,\n\tbroadcast: 'auto')~> SatRowsExist\nNewRows alterRow(insertIf(true())) ~> InsertSatRows\nSatRowsExist alterRow(insertIf(true())) ~> NewSATRecords\nhashKeys derive(LoadDateTime = currentDate()) ~> DerivedColumn1\nNewHubRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tHKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> HubLoad\nNewSATRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SATLoad"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StageSource')]",
				"[concat(variables('factoryId'), '/datasets/DVHUB')]",
				"[concat(variables('factoryId'), '/datasets/DVSAT')]"
			]
		}
	]
}