/*
Deployment script for ADWDVDemo

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ADWDVDemo"
:setvar DefaultFilePrefix "ADWDVDemo"
:setvar DefaultDataPath "C:\Users\sarath\AppData\Local\Microsoft\VisualStudio\SSDT\Adventure Works Data Vault"
:setvar DefaultLogPath "C:\Users\sarath\AppData\Local\Microsoft\VisualStudio\SSDT\Adventure Works Data Vault"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Creating [dbo].[EmailAddressHUB]...';


GO
CREATE TABLE [dbo].[EmailAddressHUB] (
    [EmailAddressVID] NVARCHAR (512) NOT NULL,
    [PersonID]        BIGINT         NOT NULL,
    [EmailAddressID]  BIGINT         NOT NULL,
    PRIMARY KEY CLUSTERED ([EmailAddressVID] ASC),
    UNIQUE NONCLUSTERED ([PersonID] ASC, [EmailAddressID] ASC)
);


GO
PRINT N'Creating [dbo].[EmailAddressIsUsedByPersonLINK]...';


GO
CREATE TABLE [dbo].[EmailAddressIsUsedByPersonLINK] (
    [EmailAddressIsUsedByPersonVID] NVARCHAR (512) NOT NULL,
    [FirstLoadDateTime]             DATETIME2 (7)  NULL,
    [EmailAddressVID]               NVARCHAR (512) NOT NULL,
    [PersonVID]                     NVARCHAR (512) NOT NULL,
    PRIMARY KEY CLUSTERED ([EmailAddressIsUsedByPersonVID] ASC),
    UNIQUE NONCLUSTERED ([EmailAddressVID] ASC, [PersonVID] ASC)
);


GO
PRINT N'Creating [dbo].[EmailAddressSAT]...';


GO
CREATE TABLE [dbo].[EmailAddressSAT] (
    [Id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[PersonHUB]...';


GO
CREATE TABLE [dbo].[PersonHUB] (
    [PersonVID]        NVARCHAR (512) NOT NULL,
    [BusinessEntityID] BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([PersonVID] ASC)
);


GO
PRINT N'Creating [dbo].[PersonSAT]...';


GO
CREATE TABLE [dbo].[PersonSAT] (
    [PersonVID]             NVARCHAR (512) NOT NULL,
    [LoadDateTime]          DATETIME       NOT NULL,
    [NameStyle]             BIT            NULL,
    [EmailPromotion]        TINYINT        NOT NULL,
    [FirstName]             VARCHAR (50)   NOT NULL,
    [LastName]              VARCHAR (50)   NOT NULL,
    [PersonTypeCode]        CHAR (2)       NULL,
    [AdditionalContactInfo] VARCHAR (MAX)  NULL,
    [Demographics]          VARCHAR (MAX)  NULL,
    [MiddleName]            VARCHAR (50)   NULL,
    [PasswordHash]          VARCHAR (128)  NULL,
    [PasswordSalt]          VARCHAR (10)   NULL,
    [Suffix]                VARCHAR (10)   NULL,
    [Title]                 VARCHAR (8)    NULL,
    PRIMARY KEY CLUSTERED ([PersonVID] ASC, [LoadDateTime] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[EmailAddressIsUsedByPersonLINK]...';


GO
ALTER TABLE [dbo].[EmailAddressIsUsedByPersonLINK] WITH NOCHECK
    ADD FOREIGN KEY ([EmailAddressVID]) REFERENCES [dbo].[EmailAddressHUB] ([EmailAddressVID]);


GO
PRINT N'Creating <unnamed>...';


GO
ALTER TABLE [dbo].[PersonSAT] WITH NOCHECK
    ADD FOREIGN KEY ([PersonVID]) REFERENCES [dbo].[PersonHUB] ([PersonVID]);


GO
PRINT N'Creating <unnamed>...';


GO
ALTER TABLE [dbo].[PersonSAT] WITH NOCHECK
    ADD CHECK (([EmailPromotion]>=(0) AND [EmailPromotion]<=(2)));


GO
PRINT N'Creating <unnamed>...';


GO
ALTER TABLE [dbo].[PersonSAT] WITH NOCHECK
    ADD CHECK (([PersonTypeCode]='EM' OR [PersonTypeCode]='GC' OR [PersonTypeCode]='IN' OR [PersonTypeCode]='SC' OR [PersonTypeCode]='SP' OR [PersonTypeCode]='VC'));


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.EmailAddressIsUsedByPersonLINK'), OBJECT_ID(N'dbo.PersonSAT'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
